{"version":3,"sources":["serviceWorker.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignOut/index.js","constants/routes.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Navigation/index.js","components/Landing/index.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/AddPhoto/index.js","components/App/index.js","index.js"],"names":["Boolean","window","location","hostname","match","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","createUser","user","db","ref","uid","set","username","phone","phoneNumber","error","getUser","userId","currentUser","once","then","snapshot","val","updateUser","userCredential","updateEmail","catch","updateProfile","displayName","photoURL","photoUrl","onAuthStateChanged","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","passwordOne","updatePassword","addPhoto","file","name","storage","child","concat","put","contentType","getDownloadURL","url","image","addProfileImage","users","images","app","initializeApp","database","_ref","mdbreact_esm","onClick","color","type","HOME","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","authUser","inherits","createClass","key","value","_this2","listener","setState","Session_context","Provider","withAuthorization","condition","WithAuthorization","apply","arguments","history","push","compose","withRouter","NavigationAuth","dark","expand","className","id","navbar","left","active","to","ROUTES","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","Landing","INITIAL_STATE","passwordTwo","SignUpFormBase","onSubmit","event","_this$state","objectSpread","preventDefault","onChange","defineProperty","target","_this$state2","md","htmlFor","placeholder","message","SignUpLink","react_router_dom","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","data","isInvalid","disabled","SignInForm","SignInPage","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","HomePage","loading","on","usersObject","usersList","keys","map","off","src","alt","width","Home_UserList","UserList","textWhite","PasswordChangeForm","AccountPage","toggle","tab","activeItem","tabs","role","icon","tabId","UpdateForm","PasswordChange","UpdateFormBase","_this3","_this3$state","AddProfileImage","files","_this4","AddPhotoPage","AddPhoto","AddPhotoBase","getImages","imagesObject","imageList","i","length","Fragment","es","onDrop","acceptedFiles","getRootProps","getInputProps","components_Navigation","react_router","exact","path","component","LandingPage","ReactDOM","render","context","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b3810b7a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n        {firebase => <Component {...props} firebase={firebase}/>}\n    </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport firebase from 'firebase'\n\nconst config = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n};\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config);\n\n        this.auth = app.auth();\n        this.db = app.database();\n\n        this.storage = firebase.storage().ref();\n    }\n\n    // *** Auth API ***\n\n    doCreateUserWithEmailAndPassword = (email, password) =>\n        this.auth.createUserWithEmailAndPassword(email, password);\n\n    doSignInWithEmailAndPassword = (email, password) =>\n        this.auth.signInWithEmailAndPassword(email, password);\n\n    createUser = (user) => {\n        this.db.ref('users/' + user.uid).set({\n            username: user.username,\n            email: user.email,\n            phone: user.phoneNumber\n        }, function (error) {\n            if (error) {\n                // The write failed...\n            } else {\n                // Data saved successfully!\n            }\n        });\n    };\n\n    getUser = () => {\n        let userId = this.auth.currentUser.uid;\n        return this.db.ref('/users/' + userId).once('value').then(function (snapshot) {\n            return snapshot.val();\n        });\n    }\n\n    updateUser = (user) => {\n        let currentUser = this.auth.currentUser;\n\n        if (currentUser.email !== user.email) {\n            this.auth.signInWithEmailAndPassword(currentUser.email, 'Amalya@123')\n                .then(function (userCredential) {\n                    userCredential.user.updateEmail('user.email')\n                })\n            currentUser.updateEmail(user.email).then(function () {\n                // Update successful.\n            }).catch(function (error) {\n                // An error happened.\n            });\n        }\n\n\n        currentUser.updateProfile({\n            displayName: user.username,\n            photoURL: user.photoUrl,\n        }).then(function () {\n            // Update successful.\n        }).catch(function (error) {\n            // An error happened.\n        });\n\n        this.db.ref('users/' + currentUser.uid).set({\n            username: user.username,\n            email: user.email,\n            phone: user.phoneNumber\n        }, function (error) {\n            if (error) {\n                // The write failed...\n            } else {\n                // Data saved successfully!\n            }\n        });\n\n    };\n\n\n    onAuthStateChanged = () =>\n        this.auth.onAuthStateChanged(\n            function (user) {\n                if (user) {\n                    // User is signed in.\n                    // ...\n                } else {\n                    // User is signed out.\n                    // ...\n                }\n            }\n        );\n\n\n    doSignOut = () => this.auth.signOut();\n\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n    doPasswordUpdate = (password, passwordOne) => {\n        let currentUser = this.auth.currentUser;\n        return this.auth.signInWithEmailAndPassword(currentUser.email, password)\n            .then(function (userCredential) {\n                userCredential.user.updatePassword(passwordOne);\n            });\n    };\n\n    addPhoto = (file) => {\n        let currentUser = this.auth.currentUser;\n        let metadata = {\n            contentType: 'image/jpeg',\n        };\n\n        let name = file.name;\n        this.storage.child(`images/${name}`).put(file, metadata);\n        let mountainImagesRef = this.storage.child(`images/${name}`);\n        return mountainImagesRef.getDownloadURL().then(url => {\n            let image ={\n                url: url,\n                name: file.name,\n                uid: currentUser.uid\n            }\n            this.db.ref('images/' + currentUser.uid).set(image);\n            return image;\n        }).catch(error =>{\n\n        });\n\n    };\n\n    addProfileImage = (file) => {\n        let currentUser = this.auth.currentUser;\n\n        let metadata = {\n            contentType: 'image/jpeg',\n        };\n\n        let name = file[0].name;\n        this.storage.child(`images/${name}`).put(file[0], metadata);\n        let mountainImagesRef = this.storage.child(`images/${name}`);\n        return mountainImagesRef.getDownloadURL().then(function (url) {\n            currentUser.updateProfile({\n                photoURL: url,\n            })\n            return url;\n        }).catch(function (error) {\n\n        });\n    }\n\n    user = uid => this.db.ref(`users/${uid}`);\n\n    users = () => this.db.ref('users');\n\n    images = () => this.db.ref(`images`);\n\n}\n\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };","import React from 'react';\n\nimport { withFirebase } from '../Firebase';\nimport {MDBBtn} from \"mdbreact\";\n\nconst SignOutButton = ({ firebase }) => (\n    <MDBBtn  onClick={firebase.doSignOut}  color=\"default-color-dark\" type=\"submit\">Sign Out</MDBBtn>\n);\n\nexport default withFirebase(SignOutButton);","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADD_PHOTO = '/AddPhoto';\nexport const PASSWORD_FORGET = '/pw-forget';","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from 'react';\n\nimport AuthUserContext from './context';\nimport {withFirebase} from '../Firebase';\n\nconst withAuthentication = Component => {\n    class WithAuthentication extends React.Component {\n        constructor(props) {\n            super(props);\n\n            this.state = {\n                authUser: null,\n            };\n        }\n\n        componentDidMount() {\n            this.listener = this.props.firebase.auth.onAuthStateChanged(\n                authUser => {\n                    authUser\n                        ? this.setState({authUser})\n                        : this.setState({authUser: null});\n                },\n            );\n        }\n\n        componentWillUnmount() {\n            this.listener();\n        }\n\n        render() {\n            return (\n                <AuthUserContext.Provider value={this.state.authUser}>\n                    <Component {...this.props} />\n                </AuthUserContext.Provider>\n            );\n        }\n    }\n\n    return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;","import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {compose} from 'recompose';\n\nimport AuthUserContext from './context';\nimport {withFirebase} from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n    class WithAuthorization extends React.Component {\n        componentDidMount() {\n            this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n                if (!condition(authUser)) {\n                    this.props.history.push(ROUTES.SIGN_IN);\n                }\n            });\n        }\n\n        componentWillUnmount() {\n            this.listener();\n        }\n\n        render() {\n            return (\n                <AuthUserContext.Consumer>\n                    {authUser =>\n                        condition(authUser) ? <Component {...this.props} /> : null\n                    }\n                </AuthUserContext.Consumer>\n            );\n        }\n    }\n\n    return compose(\n        withRouter,\n        withFirebase,\n    )(WithAuthorization);\n};\n\nexport default withAuthorization;","import React from 'react';\nimport SignOutButton from '../SignOut';\nimport * as ROUTES from '../../constants/routes';\n\nimport {AuthUserContext} from '../Session';\n\nimport {\n    MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse\n} from \"mdbreact\";\n\nconst Navigation = () => (\n    <div>\n        <AuthUserContext.Consumer>\n            {authUser =>\n                authUser ? <NavigationAuth/> : <NavigationNonAuth/>\n            }\n        </AuthUserContext.Consumer>\n    </div>\n);\n\nconst NavigationAuth = () => (\n    <MDBNavbar color=\"default-color\" dark expand=\"md\">\n        <MDBNavbarBrand>\n            <strong className=\"white-text\">React Autentication</strong>\n        </MDBNavbarBrand>\n        <MDBNavbarToggler/>\n        <MDBCollapse id=\"navbarCollapse3\" navbar>\n            <MDBNavbarNav left>\n                <MDBNavItem active>\n                    <MDBNavLink to={ROUTES.HOME}>Home</MDBNavLink>\n                </MDBNavItem>\n                <MDBNavItem>\n                    <MDBNavLink to={ROUTES.ACCOUNT}>Edit Personal Date</MDBNavLink>\n                </MDBNavItem>\n                <MDBNavItem>\n                    <MDBNavLink to={ROUTES.ADD_PHOTO}>Add Photo</MDBNavLink>\n                </MDBNavItem>\n                <MDBNavItem>\n                    <SignOutButton/>\n                </MDBNavItem>\n\n            </MDBNavbarNav>\n\n        </MDBCollapse>\n    </MDBNavbar>\n);\n\nconst NavigationNonAuth = () => (\n\n    <MDBNavbar color=\"default-color\" dark expand=\"md\">\n        <MDBNavbarBrand>\n            <strong className=\"white-text\">React Autentication</strong>\n        </MDBNavbarBrand>\n        <MDBNavbarToggler/>\n        <MDBCollapse id=\"navbarCollapse3\" navbar>\n            <MDBNavbarNav left>\n                <MDBNavItem active>\n                    <MDBNavLink to={ROUTES.SIGN_IN}>Sign In</MDBNavLink>\n                </MDBNavItem>\n                <MDBNavItem>\n                    <MDBNavLink to={ROUTES.SIGN_UP}>Registration</MDBNavLink>\n                </MDBNavItem>\n            </MDBNavbarNav>\n\n        </MDBCollapse>\n    </MDBNavbar>\n);\n\nexport default Navigation;","import React from 'react';\n\n\nconst Landing = () => (\n    <div>\n    </div>\n);\n\nexport default Landing;","import React, {Component} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport {compose} from 'recompose';\nimport {withFirebase} from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport {MDBContainer, MDBRow, MDBCol, MDBBtn} from 'mdbreact';\n\nconst SignUpPage = () => (\n    <div>\n        <SignUpForm/>\n    </div>\n);\n\n\nconst INITIAL_STATE = {\n    username: '',\n    email: '',\n    phoneNumber: '',\n    photoURL: '',\n    passwordOne: '',\n    passwordTwo: '',\n    error: null,\n};\n\nclass SignUpFormBase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {...INITIAL_STATE};\n    }\n\n    onSubmit = event => {\n        const {username, phoneNumber, photoURL, email, passwordOne} = this.state;\n\n        this.props.firebase\n            .doCreateUserWithEmailAndPassword(email, passwordOne)\n            .then(authUser => {\n                // Create a user in your Firebase realtime database\n                this.props.firebase.createUser({\n                    username,\n                    email,\n                    phoneNumber,\n                    photoURL,\n                    uid: authUser.user.uid\n\n                });\n                this.props.firebase.updateUser({\n                    username,\n                    email,\n                    phoneNumber,\n                    photoURL\n                });\n            })\n            .then(() => {\n                this.setState({...INITIAL_STATE});\n                this.props.history.push(ROUTES.HOME);\n            })\n            .catch(error => {\n                this.setState({error});\n            });\n\n        event.preventDefault();\n    };\n\n    onChange = event => {\n        this.setState({[event.target.name]: event.target.value});\n    };\n\n    render() {\n\n        const {\n            username,\n            email,\n            phoneNumber,\n            passwordOne,\n            passwordTwo,\n            error,\n        } = this.state;\n\n        return (\n            <MDBContainer>\n                <MDBRow>\n                    <MDBCol md=\"6\">\n                        <form onSubmit={this.onSubmit}>\n                            <p className=\"h4 text-center mb-4\">Sign up</p>\n\n                            <label\n                                htmlFor=\"email\"\n                                className=\"grey-text\"\n                            >\n                                Email Address as login\n                            </label>\n                            <input\n                                type=\"email\"\n                                id=\"email\"\n                                className=\"form-control\"\n                                name=\"email\"\n                                value={email}\n                                onChange={this.onChange}\n                                placeholder=\"Email Address\"\n                            />\n                            <br/>\n                            <label htmlFor=\"name\" className=\"grey-text\">\n                                Your name\n                            </label>\n                            <input\n                                type=\"text\"\n                                id=\"name\"\n                                className=\"form-control\"\n                                name=\"username\"\n                                value={username}\n                                onChange={this.onChange}\n                                placeholder=\"Full Name\"\n                            />\n                            <br/>\n                            <label\n                                htmlFor=\"number\"\n                                className=\"grey-text\"\n                            >\n                                Phone number\n                            </label>\n                            <input\n                                type=\"text\"\n                                id=\"number\"\n                                className=\"form-control\"\n                                name=\"phoneNumber\"\n                                value={phoneNumber}\n                                onChange={this.onChange}\n                                placeholder=\"Phone number\"\n                            />\n                            <br/>\n                            <label\n                                htmlFor=\"password\"\n                                className=\"grey-text\"\n                            >\n                                Your password\n                            </label>\n                            <input\n                                id=\"password\"\n                                className=\"form-control\"\n                                name=\"passwordOne\"\n                                value={passwordOne}\n                                onChange={this.onChange}\n                                type=\"password\"\n                                placeholder=\"Password\"\n                            />\n                            <label\n                                htmlFor=\"passwordTwo\"\n                                className=\"grey-text\"\n                            >\n                                Repeat password\n                            </label>\n                            <input\n                                id=\"passwordTwo\"\n                                className=\"form-control\"\n                                name=\"passwordTwo\"\n                                value={passwordTwo}\n                                onChange={this.onChange}\n                                type=\"password\"\n                                placeholder=\"confirm Password\"\n                            />\n                            <div className=\"text-center mt-4\">\n                                <MDBBtn color=\"unique\" type=\"submit\">\n                                    Register\n                                </MDBBtn>\n                            </div>\n                            {error && <p>{error.message}</p>}\n\n                        </form>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n\n        );\n    }\n}\n\nconst SignUpLink = () => (\n    <p>\n        Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n    </p>\n);\n\nconst SignUpForm = compose(\n    withRouter,\n    withFirebase,\n)(SignUpFormBase);\n\nexport default SignUpPage;\n\nexport {SignUpForm, SignUpLink};","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {withFirebase} from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport {MDBBtn, MDBCol, MDBContainer, MDBRow} from \"mdbreact\";\n\nconst PasswordForgetPage = () => (\n    <div>\n        <h1>PasswordForget</h1>\n        <PasswordForgetForm/>\n    </div>\n);\n\nconst INITIAL_STATE = {\n    email: '',\n    error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {...INITIAL_STATE};\n    }\n\n    onSubmit = event => {\n        const {email} = this.state;\n\n        this.props.firebase\n            .doPasswordReset(email)\n            .then(() => {\n                this.setState({...INITIAL_STATE});\n            })\n            .catch(error => {\n                this.setState({error});\n            });\n\n        event.preventDefault();\n    };\n\n    onChange = event => {\n        this.setState({[event.target.name]: event.target.value});\n    };\n\n    render() {\n        const {email, error} = this.state;\n\n        return (\n            <MDBContainer>\n                <MDBRow>\n                    <MDBCol md=\"6\">\n                        <form onSubmit={this.onSubmit}>\n                            <p className=\"h4 text-center mb-4\">Update personal information</p>\n                            <label htmlFor=\"email2\" className=\"grey-text\">\n                                New password\n                            </label>\n                            <input\n                                id=\"email2\"\n                                className=\"form-control\"\n\n                                name=\"email\"\n                                value={email}\n                                onChange={this.onChange}\n                                type=\"text\"\n                                placeholder=\"Email Address\"\n                            />\n                            <br/>\n\n                            <div className=\"text-center mt-4\">\n                                <MDBBtn color=\"unique\" type=\"submit\">\n                                    Reset My Password\n                                </MDBBtn>\n                            </div>\n                            {error && <p>{error.message}</p>}\n\n\n                        </form>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n\n\n        );\n    }\n}\n\nconst PasswordForgetLink = () => (\n    <p>\n        <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n    </p>\n);\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport {PasswordForgetForm, PasswordForgetLink};","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {compose} from 'recompose';\n\nimport {SignUpLink} from '../SignUp';\nimport {PasswordForgetLink} from '../PasswordForget';\nimport {withFirebase} from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport {MDBContainer, MDBRow, MDBCol, MDBBtn} from 'mdbreact';\n\n\nconst SignInPage = () => (\n    <div>\n        <SignInForm/>\n        <PasswordForgetLink/>\n        <SignUpLink/>\n    </div>\n);\n\nconst INITIAL_STATE = {\n    email: '',\n    password: '',\n    error: null,\n};\n\nclass SignInFormBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {...INITIAL_STATE};\n    }\n\n    onSubmit = event => {\n        event.preventDefault();\n        const {email, password} = this.state;\n\n        this.props.firebase\n            .doSignInWithEmailAndPassword(email, password)\n            .then((data) => {\n                this.setState({...INITIAL_STATE});\n                this.props.history.push(ROUTES.HOME);\n\n            })\n            .catch(error => {\n                this.setState({error});\n            });\n\n\n    };\n\n    onChange = event => {\n        this.setState({[event.target.name]: event.target.value});\n    };\n\n    render() {\n        const {email, password, error} = this.state;\n\n        const isInvalid = password === '' || email === '';\n\n        return (\n            <MDBContainer>\n                <MDBRow>\n                    <MDBCol md=\"6\">\n                        <form onSubmit={this.onSubmit}>\n                            <h1 className=\"h4 text-center mb-4\">Sign in</h1>\n                            <label htmlFor=\"email3\" className=\"grey-text\">\n                                Your email\n                            </label>\n                            <input\n                                type=\"email\"\n                                id=\"email3\"\n                                className=\"form-control\"\n                                name=\"email\"\n                                value={email}\n                                onChange={this.onChange}\n                                placeholder=\"Email Address\"\n                            />\n                            <br/>\n                            <label htmlFor=\"password2\" className=\"grey-text\">\n                                Your password\n                            </label>\n                            <input\n                                type=\"password\"\n                                id=\"password2\"\n                                className=\"form-control\"\n                                name=\"password\"\n                                value={password}\n                                onChange={this.onChange}\n                                placeholder=\"Password\"\n                            />\n                            <div className=\"text-center mt-4\">\n                                <MDBBtn disabled={isInvalid} color=\"indigo\" type=\"submit\">Login</MDBBtn>\n                            </div>\n                            {error && <p>{error.message}</p>}\n                        </form>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n        );\n    }\n}\n\nconst SignInForm = compose(\n    withRouter,\n    withFirebase,\n)(SignInFormBase);\n\nexport default SignInPage;\n\nexport {SignInForm};","import React, {Component} from 'react';\nimport {MDBTable, MDBTableBody, MDBTableHead} from 'mdbreact';\n\nimport {AuthUserContext, withAuthorization} from '../Session';\n\nclass HomePage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: false,\n            user: [],\n            users: []\n        };\n    }\n\n    componentDidMount() {\n        this.getUser();\n\n    }\n\n\n\n    getUser() {\n        let currentUser = this.props.firebase.auth.currentUser;\n\n        this.setState({loading: true, user: currentUser});\n        this.props.firebase.users().on('value', snapshot => {\n            const usersObject = snapshot.val();\n\n            const usersList = Object.keys(usersObject).map(key => ({\n                ...usersObject[key],\n                uid: key,\n            }));\n\n            this.setState({\n                users: usersList,\n                loading: false,\n            });\n        });\n    }\n\n    componentWillUnmount() {\n        this.props.firebase.users().off();\n    }\n\n    render() {\n        const {user, users, loading} = this.state;\n        return (\n            <AuthUserContext.Consumer>\n                {authUser => (\n\n                    <div>\n\n                        <h1>Hi <span className={'teal-text'}>{user.displayName}</span>, welcome to home page</h1>\n                        <div>\n                            <img src={user.photoURL} alt='' width={150}/>\n                        </div>\n                        <h1>All users</h1>\n                        {loading && <div>Loading ...</div>}\n\n                        <UserList users={users}/>\n                    </div>\n                )}\n            </AuthUserContext.Consumer>\n        );\n    }\n}\n\nconst UserList = ({users}) => (\n    <MDBTable>\n        <MDBTableHead color=\"primary-color\" textWhite>\n            <tr>\n                <th>Id</th>\n                <th>email</th>\n                <th>Name</th>\n            </tr>\n        </MDBTableHead>\n        <MDBTableBody>\n            {users.map(user => (\n                <tr key={user.uid}>\n                    <td>{user.uid}</td>\n                    <td>{user.email}</td>\n                    <td>{user.username}</td>\n                </tr>\n\n            ))}\n        </MDBTableBody>\n    </MDBTable>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(HomePage);","import React, {Component} from 'react';\n\nimport {withFirebase} from '../Firebase';\nimport {MDBContainer, MDBRow, MDBCol, MDBBtn} from 'mdbreact';\n\n\nconst INITIAL_STATE = {\n    password: '',\n    passwordOne: '',\n    passwordTwo: '',\n    error: null,\n};\n\nclass PasswordChangeForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {...INITIAL_STATE};\n    }\n\n    onSubmit = event => {\n        event.preventDefault();\n        const {password, passwordOne} = this.state;\n\n        this.props.firebase\n            .doPasswordUpdate(password, passwordOne)\n            .then(() => {\n                this.setState({...INITIAL_STATE});\n            })\n            .catch(error => {\n                this.setState({error});\n            });\n\n\n    };\n\n    onChange = event => {\n        this.setState({[event.target.name]: event.target.value});\n    };\n\n    render() {\n        const {password, passwordOne, passwordTwo, error} = this.state;\n\n        return (\n            <MDBContainer>\n                <MDBRow>\n                    <MDBCol md=\"6\">\n                        <form onSubmit={this.onSubmit}>\n                            <p className=\"h4 text-center mb-4\">Change password</p>\n                            <label htmlFor=\"password0\" className=\"grey-text\">\n                                Current password\n                            </label>\n                            <input\n                                id=\"password0\"\n                                className=\"form-control\"\n                                name=\"password\"\n                                value={password}\n                                onChange={this.onChange}\n                                type=\"password\"\n                                placeholder=\"Password\"\n                            />\n                            <br/>\n                            <label htmlFor=\"password1\" className=\"grey-text\">\n                                New password\n                            </label>\n                            <input\n                                id=\"password1\"\n                                className=\"form-control\"\n                                name=\"passwordOne\"\n                                value={passwordOne}\n                                onChange={this.onChange}\n                                type=\"password\"\n                                placeholder=\"New Password\"\n                            />\n                            <br/>\n                            <label\n                                htmlFor=\"passwordTwo1\"\n                                className=\"grey-text\"\n                            >\n                                Confirm password\n                            </label>\n                            <input\n                                id=\"passwordTwo1\"\n                                className=\"form-control\"\n                                name=\"passwordTwo\"\n                                value={passwordTwo}\n                                onChange={this.onChange}\n                                type=\"password\"\n                                placeholder=\"Confirm password\"\n                            />\n                            <br/>\n\n                            <div className=\"text-center mt-4\">\n                                <MDBBtn color=\"unique\" type=\"submit\">\n                                    Update\n                                </MDBBtn>\n                            </div>\n                            {error && <p>{error.message}</p>}\n\n\n                        </form>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n\n\n        );\n    }\n}\n\nexport default withFirebase(PasswordChangeForm);","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {compose} from 'recompose';\nimport {withFirebase} from '../Firebase';\nimport {\n    MDBContainer,\n    MDBRow,\n    MDBCol,\n    MDBBtn,\n    MDBTabPane,\n    MDBTabContent,\n    MDBNav,\n    MDBNavItem,\n    MDBNavLink,\n    MDBIcon\n} from 'mdbreact';\n\nimport {AuthUserContext, withAuthorization} from '../Session';\nimport PasswordChangeForm from '../PasswordChange';\n\nclass AccountPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeItem: \"1\"\n        };\n    }\n\n\n    toggle = tab => () => {\n        if (this.state.activeItem !== tab) {\n            this.setState({\n                activeItem: tab\n            });\n        }\n    }\n\n    render() {\n        return (\n            <AuthUserContext.Consumer>\n                {authUser => (\n                    <MDBContainer>\n                        <MDBNav tabs color=\"default-color\">\n                            <MDBNavItem>\n                                <MDBNavLink\n                                    to=\"#\"\n                                    className={this.state.activeItem === \"1\" ? \"active teal-text\" : \"cyan-text\"}\n                                    onClick={this.toggle(\"1\")}\n                                    role=\"tab\"\n                                >\n                                    <MDBIcon icon=\"user\"/> Update Information\n                                </MDBNavLink>\n                            </MDBNavItem>\n                            <MDBNavItem>\n                                <MDBNavLink\n                                    to=\"#\"\n                                    className={this.state.activeItem === \"3\" ? \"active teal-text\" : \"cyan-text\"}\n                                    onClick={this.toggle(\"3\")}\n                                    role=\"tab\"\n                                >\n                                    <MDBIcon icon=\"envelope\"/> change Password\n                                </MDBNavLink>\n                            </MDBNavItem>\n\n                        </MDBNav>\n                        <MDBTabContent\n                            className=\"card\"\n                            activeItem={this.state.activeItem}\n                        >\n                            <MDBTabPane tabId=\"1\" role=\"tabpanel\">\n                                <UpdateForm/>\n                            </MDBTabPane>\n                            <MDBTabPane tabId=\"3\" role=\"tabpanel\">\n                                <PasswordChangeForm/>\n                            </MDBTabPane>\n\n                        </MDBTabContent>\n                    </MDBContainer>\n                )}\n            </AuthUserContext.Consumer>\n        );\n    }\n}\n\n// const AccountPage = () => (\n//     <AuthUserContext.Consumer>\n//         {authUser => (\n//             <div>\n//                 <UpdateForm />\n//             </div>\n//         )}\n//     </AuthUserContext.Consumer>\n//\n// );\n\n\nconst INITIAL_STATE = {\n    username: '',\n    email: '',\n    phoneNumber: '',\n    photoURL: '',\n    passwordOne: '',\n    passwordTwo: '',\n    error: null,\n};\n\nclass UpdateFormBase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {...INITIAL_STATE};\n    }\n\n    componentWillMount() {\n        this.props.firebase.getUser().then(data => {\n             this.setState({\n                username: data.username,\n                email: data.email,\n                phoneNumber: data.phone,\n            })\n        }).catch(function (error) {\n            // An error happened.\n        });\n        let currentUser = this.props.firebase.auth.currentUser;\n        this.setState({\n            username: currentUser.username,\n            email: currentUser.email,\n            photoURL: currentUser.photoURL,\n        })\n    }\n\n    componentWillReceiveProps() {\n\n    }\n\n    onSubmit = event => {\n        const {username, phoneNumber, photoURL, email,} = this.state;\n\n        event.preventDefault();\n        this.props.firebase.updateUser({\n            username,\n            email,\n            phoneNumber,\n            photoURL\n        })\n\n\n    };\n    AddProfileImage = event => {\n        this.props.firebase.addProfileImage(event.target.files).then(url => {\n            this.setState({photoURL: url})\n            return url;\n        }).catch(function (error) {\n\n        })\n\n\n    };\n\n    onChange = event => {\n        this.setState({[event.target.name]: event.target.value});\n    };\n\n    render() {\n\n        const {\n            username,\n            email,\n            phoneNumber,\n            photoURL,\n            error,\n        } = this.state;\n\n        return (\n\n            <MDBContainer>\n                <MDBRow>\n                    <MDBCol md=\"6\">\n                        <form onSubmit={this.onSubmit}>\n                            <h1 className=\"h4 text-center mb-4 mt-3\">Update personal information</h1>\n\n                            <label htmlFor=\"file\" className=\"grey-text\">\n                                Add profile image\n                            </label>\n                            <input\n                                type=\"file\"\n                                id=\"file\"\n                                className=\"\"\n                                name=\"file\"\n                                onChange={this.AddProfileImage}\n                                placeholder=\"Full Name\"\n                            />\n                            <br/>\n                            <div>\n                                <img src={photoURL} alt='' width={150}/>\n                            </div>\n                            <br/>\n                            <label htmlFor=\"name\" className=\"grey-text\">\n                                Your name\n                            </label>\n\n                            <input\n                                type=\"text\"\n                                id=\"name\"\n                                className=\"form-control\"\n                                name=\"username\"\n                                value={username || ''}\n                                onChange={this.onChange}\n                                placeholder=\"Full Name\"\n                            />\n                            <br/>\n                            <label\n                                htmlFor=\"phone\"\n                                className=\"grey-text\"\n                            >\n                                Phone Number\n                            </label>\n                            <input\n                                type=\"text\"\n                                id=\"phone\"\n                                className=\"form-control\"\n                                name=\"phoneNumber\"\n                                value={phoneNumber || ''}\n                                onChange={this.onChange}\n                                placeholder=\"Phone Number\"\n                            />\n                            <br/>\n                            <label\n                                htmlFor=\"email1\"\n                                className=\"grey-text\"\n                            >\n                                Email Address\n                            </label>\n                            <input\n                                type=\"email\"\n                                id=\"email1\"\n                                className=\"form-control\"\n                                name=\"email\"\n                                value={email || ''}\n                                onChange={this.onChange}\n                                placeholder=\"Email Address\"\n                            />\n                            <br/>\n\n                            <div className=\"text-center mt-4\">\n                                <MDBBtn color=\"unique\" type=\"submit\">\n                                    Update\n                                </MDBBtn>\n                            </div>\n                            {error && <p>{error.message}</p>}\n\n                        </form>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n\n        );\n    }\n}\n\n\nconst UpdateForm = compose(\n    withRouter,\n    withFirebase,\n)(UpdateFormBase);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(AccountPage);\n\n\n\n","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {compose} from 'recompose';\nimport {withFirebase} from '../Firebase';\nimport Dropzone from 'react-dropzone'\n\nimport {AuthUserContext, withAuthorization} from '../Session';\nimport {MDBContainer} from \"mdbreact\";\n\n\nclass AddPhotoPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeItem: \"1\"\n        };\n    }\n\n\n    toggle = tab => () => {\n        if (this.state.activeItem !== tab) {\n            this.setState({\n                activeItem: tab\n            });\n        }\n    }\n\n    render() {\n        return (\n            <AuthUserContext.Consumer>\n                {authUser => (\n                    <AddPhoto/>\n                )}\n            </AuthUserContext.Consumer>\n        );\n    }\n}\n\nconst INITIAL_STATE = {\n    images: [],\n    error: null,\n};\n\nclass AddPhotoBase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {...INITIAL_STATE};\n    }\n\n    componentWillMount() {\n        this.getImages()\n\n    }\n\n    componentWillReceiveProps() {\n\n    }\n\n    getImages = () => {\n\n        this.props.firebase.images().on('value', snapshot => {\n            const imagesObject = snapshot.val();\n\n            const imageList = Object.keys(imagesObject).map(key => ({\n                ...imagesObject[key],\n                uid: key,\n            }));\n\n            this.setState({\n                images: imageList,\n                loading: false,\n            });\n        });\n    }\n\n    onChange = file => {\n\n        let i, images = [];\n        for (i = 0; i < file.length; i++) {\n            this.props.firebase.addPhoto(file[i]).then(data => {\n                images.push(data);\n                this.setState({images: images})\n\n            })\n        }\n\n\n    };\n\n    render() {\n        const {\n            images,\n            error,\n        } = this.state;\n\n\n        return (\n            <React.Fragment>\n                <Dropzone onDrop={acceptedFiles => this.onChange(acceptedFiles)}>\n                    {({getRootProps, getInputProps}) => (\n                        <section>\n                            <div {...getRootProps()} className='dropzone'>\n                                <input {...getInputProps()} />\n                                <p className='pt-3'>Click to select files</p>\n                            </div>\n                        </section>\n                    )}\n                </Dropzone>\n                {error && <p>{error.message}</p>}\n                <MDBContainer >\n                    <div className='row'>\n                    {\n\n                        images.length > 0 && images.map((image, i) => {\n                            return <div className='col-2' key={i}>\n                                <img src={image.url} alt={image.name}/>\n                            </div>\n                        })\n                    }\n                    </div>\n                </MDBContainer>\n            </React.Fragment>\n        );\n    }\n}\n\n\nconst AddPhoto = compose(\n    withRouter,\n    withFirebase,\n)(AddPhotoBase);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(AddPhotoPage);\n\n\n\n","import React from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\nimport Navigation from '../Navigation';\nimport LandingPage from '../Landing';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport PasswordForgetPage from '../PasswordForget';\nimport HomePage from '../Home';\nimport AccountPage from '../Account';\nimport AddPhoto from '../AddPhoto';\n\nimport * as ROUTES from '../../constants/routes';\nimport {withAuthentication} from '../Session';\n\n\nconst App = () => (\n    <Router>\n        <div>\n            <Navigation/>\n\n            <hr/>\n\n            <Route exact path={ROUTES.LANDING} component={LandingPage}/>\n            <Route path={ROUTES.SIGN_UP} component={SignUpPage}/>\n            <Route path={ROUTES.SIGN_IN} component={SignInPage}/>\n            <Route\n                path={ROUTES.PASSWORD_FORGET}\n                component={PasswordForgetPage}\n            />\n            <Route path={ROUTES.HOME} component={HomePage}/>\n            <Route path={ROUTES.ACCOUNT} component={AccountPage}/>\n            <Route path={ROUTES.ADD_PHOTO} component={AddPhoto}/>\n        </div>\n    </Router>\n);\n\nexport default withAuthentication(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport './tabs.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n    <FirebaseContext.Provider value={new Firebase()}>\n        <App />\n    </FirebaseContext.Provider>,\n    document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}