{"version":3,"sources":["serviceWorker.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignOut/index.js","constants/routes.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Navigation/index.js","components/Landing/index.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/AddPhoto/index.js","components/App/index.js","index.js"],"names":["Boolean","window","location","hostname","match","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","createUser","user","db","ref","uid","set","username","phone","phoneNumber","error","getUser","userId","currentUser","once","then","snapshot","val","updateUser","userCredential","updateEmail","catch","updateProfile","displayName","photoURL","photoUrl","onAuthStateChanged","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","passwordOne","updatePassword","addPhoto","file","i","metadata","contentType","images","length","name","storage","child","concat","put","getDownloadURL","url","push","addProfileImage","getImages","listAll","users","app","initializeApp","database","_ref","mdbreact_esm","onClick","color","type","HOME","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","authUser","inherits","createClass","key","value","_this2","listener","setState","Session_context","Provider","withAuthorization","condition","WithAuthorization","apply","arguments","history","compose","withRouter","NavigationAuth","dark","expand","className","id","navbar","left","active","to","ROUTES","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","Landing","INITIAL_STATE","passwordTwo","SignUpFormBase","onSubmit","event","_this$state","objectSpread","preventDefault","onChange","defineProperty","target","_this$state2","md","htmlFor","placeholder","message","SignUpLink","react_router_dom","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","data","isInvalid","disabled","SignInForm","SignInPage","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","HomePage","loading","console","log","on","usersObject","usersList","keys","map","off","src","alt","width","Home_UserList","UserList","textWhite","PasswordChangeForm","AccountPage","toggle","tab","activeItem","tabs","role","icon","tabId","UpdateForm","PasswordChange","UpdateFormBase","_this3","_this3$state","AddProfileImage","files","_this4","AddPhotoPage","AddPhoto","photo","AddPhotoBase","_this2$state","Fragment","es","onDrop","acceptedFiles","getRootProps","getInputProps","components_Navigation","react_router","exact","path","component","LandingPage","AdminPage","ReactDOM","render","context","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a7b864be.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n        {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport firebase from 'firebase'\n\nconst config = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n};\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config);\n\n        this.auth = app.auth();\n        this.db = app.database();\n\n        this.storage = firebase.storage().ref();\n    }\n\n    // *** Auth API ***\n\n    doCreateUserWithEmailAndPassword = (email, password) =>\n        this.auth.createUserWithEmailAndPassword(email, password);\n\n    doSignInWithEmailAndPassword = (email, password) =>\n        this.auth.signInWithEmailAndPassword(email, password);\n\n    createUser = (user) => {\n        this.db.ref('users/' + user.uid).set({\n            username: user.username,\n            email: user.email,\n            phone: user.phoneNumber\n        }, function (error) {\n            if (error) {\n                // The write failed...\n            } else {\n                // Data saved successfully!\n            }\n        });\n    };\n\n    getUser = () => {\n        let userId = this.auth.currentUser.uid;\n        return this.db.ref('/users/' + userId).once('value').then(function (snapshot) {\n            return snapshot.val();\n        });\n    }\n\n    updateUser = (user) => {\n        let currentUser = this.auth.currentUser;\n\n        if (currentUser.email !== user.email) {\n            this.auth.signInWithEmailAndPassword(currentUser.email, 'Amalya@123')\n                .then(function (userCredential) {\n                    userCredential.user.updateEmail('user.email')\n                })\n\n            debugger;\n            currentUser.updateEmail(user.email).then(function () {\n                // Update successful.\n            }).catch(function (error) {\n                // An error happened.\n            });\n        }\n\n\n        currentUser.updateProfile({\n            displayName: user.username,\n            photoURL: user.photoUrl,\n        }).then(function () {\n            // Update successful.\n        }).catch(function (error) {\n            // An error happened.\n        });\n\n        this.db.ref('users/' + currentUser.uid).set({\n            username: user.username,\n            email: user.email,\n            phone: user.phoneNumber\n        }, function (error) {\n            if (error) {\n                // The write failed...\n            } else {\n                // Data saved successfully!\n            }\n        });\n\n    };\n\n\n    onAuthStateChanged = () =>\n        this.auth.onAuthStateChanged(\n            function (user) {\n                if (user) {\n                    // User is signed in.\n                    // ...\n                } else {\n                    // User is signed out.\n                    // ...\n                }\n            }\n        );\n\n\n    doSignOut = () => this.auth.signOut();\n\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n    doPasswordUpdate = (password, passwordOne) => {\n        let currentUser = this.auth.currentUser;\n        debugger;\n        return this.auth.signInWithEmailAndPassword(currentUser.email, password)\n            .then(function (userCredential) {\n                debugger;\n                userCredential.user.updatePassword(passwordOne);\n            });\n    };\n\n\n    // *** User API ***\n\n    addPhoto = (file) => {\n\n\n// Create a reference to 'mountains.jpg'\n//         let mountainsRef = this.storage.child('mountains.jpg');\n//\n// // Create a reference to 'images/mountains.jpg'\n//         ;\n//         console.log(mountainsRef);\n//         console.log(mountainImagesRef);\n\n        // Create file metadata including the content type\n        let metadata = {\n            contentType: 'image/jpeg',\n        };\n        let i, images = [];\n// Upload the file and metadata\n        for (i = 0; i < file.length; i++) {\n            debugger;\n            let name = file[i].name;\n            this.storage.child(`images/${name}`).put(file[i], metadata);\n            let mountainImagesRef = this.storage.child(`images/${name}`);\n            mountainImagesRef.getDownloadURL().then(function (url) {\n                images.push(url);\n            }).catch(function (error) {\n\n            });\n        }\n\n        return images;\n    };\n\n    addProfileImage = (file) => {\n        debugger;\n        let currentUser = this.auth.currentUser;\n\n        let metadata = {\n            contentType: 'image/jpeg',\n        };\n\n        let name = file[0].name;\n        this.storage.child(`images/${name}`).put(file[0], metadata);\n        let mountainImagesRef = this.storage.child(`images/${name}`);\n        return mountainImagesRef.getDownloadURL().then(function (url) {\n            currentUser.updateProfile({\n                photoURL: url,\n            })\n            return url;\n        }).catch(function (error) {\n\n        });\n    }\n    getImages = () => {\n        debugger;\n        let currentUser = this.auth.currentUser;\n        let ImageList = this.storage.child(`files/${currentUser.uid}`);\n        return ImageList.listAll();\n\n\n    };\n\n    user = uid => this.db.ref(`users/${uid}`);\n\n    users = () => this.db.ref('users');\n\n\n//     service firebase.storage {\n//     match /b/{bucket}/o {\n// match /{allPaths=**} {\n//     allow read, write: if request.auth != null;\n// }\n// }\n// }\n}\n\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };","import React from 'react';\n\nimport { withFirebase } from '../Firebase';\nimport {MDBBtn} from \"mdbreact\";\n\nconst SignOutButton = ({ firebase }) => (\n    <MDBBtn  onClick={firebase.doSignOut}  color=\"default-color-dark\" type=\"submit\">Sign Out</MDBBtn>\n);\n\nexport default withFirebase(SignOutButton);","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n    class WithAuthentication extends React.Component {\n        constructor(props) {\n            super(props);\n\n            this.state = {\n                authUser: null,\n            };\n        }\n\n        componentDidMount() {\n            this.listener = this.props.firebase.auth.onAuthStateChanged(\n                authUser => {\n                    authUser\n                        ? this.setState({ authUser })\n                        : this.setState({ authUser: null });\n                },\n            );\n        }\n\n        componentWillUnmount() {\n            this.listener();\n        }\n\n        render() {\n            return (\n                <AuthUserContext.Provider value={this.state.authUser}>\n                    <Component {...this.props} />\n                </AuthUserContext.Provider>\n            );\n        }\n    }\n\n    return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n    class WithAuthorization extends React.Component {\n        componentDidMount() {\n            this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n                if (!condition(authUser)) {\n                    this.props.history.push(ROUTES.SIGN_IN);\n                }\n            });\n        }\n\n        componentWillUnmount() {\n            this.listener();\n        }\n\n        render() {\n            return (\n                <AuthUserContext.Consumer>\n                    {authUser =>\n                        condition(authUser) ? <Component {...this.props} /> : null\n                    }\n                </AuthUserContext.Consumer>\n            );\n        }\n    }\n\n    return compose(\n        withRouter,\n        withFirebase,\n    )(WithAuthorization);\n};\n\nexport default withAuthorization;","import React from 'react';\nimport SignOutButton from '../SignOut';\nimport * as ROUTES from '../../constants/routes';\n\nimport {AuthUserContext} from '../Session';\n\nimport {\n    MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse\n} from \"mdbreact\";\n\nconst Navigation = () => (\n    <div>\n        <AuthUserContext.Consumer>\n            {authUser =>\n                authUser ? <NavigationAuth/> : <NavigationNonAuth/>\n            }\n        </AuthUserContext.Consumer>\n    </div>\n);\n\nconst NavigationAuth = () => (\n    <MDBNavbar color=\"default-color\" dark expand=\"md\">\n        <MDBNavbarBrand>\n            <strong className=\"white-text\">React Autentication</strong>\n        </MDBNavbarBrand>\n        <MDBNavbarToggler />\n        <MDBCollapse id=\"navbarCollapse3\" navbar>\n            <MDBNavbarNav left>\n                <MDBNavItem active>\n                    <MDBNavLink to={ROUTES.HOME}>Home</MDBNavLink>\n                </MDBNavItem>\n                <MDBNavItem>\n                    <MDBNavLink to={ROUTES.ACCOUNT}>Edit Personal Date</MDBNavLink>\n                </MDBNavItem>\n                <MDBNavItem>\n                    <MDBNavLink to={ROUTES.ADMIN}>Add Photo</MDBNavLink>\n                </MDBNavItem>\n                <MDBNavItem>\n                    <SignOutButton/>\n                </MDBNavItem>\n\n            </MDBNavbarNav>\n\n        </MDBCollapse>\n    </MDBNavbar>\n);\n\nconst NavigationNonAuth = () => (\n\n    <MDBNavbar color=\"default-color\" dark expand=\"md\">\n        <MDBNavbarBrand>\n            <strong className=\"white-text\">React Autentication</strong>\n        </MDBNavbarBrand>\n        <MDBNavbarToggler />\n        <MDBCollapse id=\"navbarCollapse3\"  navbar>\n            <MDBNavbarNav left>\n                <MDBNavItem active>\n                    <MDBNavLink to={ROUTES.SIGN_IN}>Sign In</MDBNavLink>\n                </MDBNavItem>\n                <MDBNavItem>\n                    <MDBNavLink to={ROUTES.SIGN_UP}>Registration</MDBNavLink>\n                </MDBNavItem>\n            </MDBNavbarNav>\n\n        </MDBCollapse>\n    </MDBNavbar>\n);\n\nexport default Navigation;","import React from 'react';\n\n\nconst Landing = () => (\n    <div>\n    </div>\n);\n\nexport default Landing;","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\n\nconst SignUpPage = () => (\n    <div>\n        <SignUpForm />\n    </div>\n);\n\n\n\nconst INITIAL_STATE = {\n    username: '',\n    email: '',\n    phoneNumber:'',\n    photoURL:'',\n    passwordOne: '',\n    passwordTwo: '',\n    error: null,\n};\n\nclass SignUpFormBase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onSubmit = event => {\n        const { username,phoneNumber, photoURL, email, passwordOne } = this.state;\n\n        this.props.firebase\n            .doCreateUserWithEmailAndPassword(email, passwordOne)\n            .then(authUser => {\n                // Create a user in your Firebase realtime database\n                debugger;\n                this.props.firebase.createUser({\n                    username,\n                    email,\n                    phoneNumber,\n                    photoURL,\n                    uid :authUser.user.uid\n\n                });\n                this.props.firebase.updateUser({\n                    username,\n                    email,\n                    phoneNumber,\n                    photoURL\n                });\n            })\n            .then(() => {\n                this.setState({ ...INITIAL_STATE });\n                this.props.history.push(ROUTES.HOME);\n            })\n            .catch(error => {\n                this.setState({ error });\n            });\n\n        event.preventDefault();\n    };\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n\n        const {\n            username,\n            email,\n            phoneNumber,\n            passwordOne,\n            passwordTwo,\n            error,\n        } = this.state;\n\n        const isInvalid =\n            passwordOne !== passwordTwo ||\n            passwordOne === '' || phoneNumber === '' ||\n            email === '' ||\n            username === '';\n\n        return (\n            <MDBContainer>\n                <MDBRow>\n                    <MDBCol md=\"6\">\n                        <form onSubmit={this.onSubmit}>\n                            <p className=\"h4 text-center mb-4\">Sign up</p>\n\n                            <label\n                                htmlFor=\"email\"\n                                className=\"grey-text\"\n                            >\n                                Email Address as login\n                            </label>\n                            <input\n                                type=\"email\"\n                                id=\"email\"\n                                className=\"form-control\"\n                                name=\"email\"\n                                value={email}\n                                onChange={this.onChange}\n                                placeholder=\"Email Address\"\n                            />\n                            <br />\n                            <label htmlFor=\"name\" className=\"grey-text\">\n                                Your name\n                            </label>\n                            <input\n                                type=\"text\"\n                                id=\"name\"\n                                className=\"form-control\"\n                                name=\"username\"\n                                value={username}\n                                onChange={this.onChange}\n                                placeholder=\"Full Name\"\n                            />\n                            <br />\n                            <label\n                                htmlFor=\"number\"\n                                className=\"grey-text\"\n                            >\n                                Phone number\n                            </label>\n                            <input\n                                type=\"text\"\n                                id=\"number\"\n                                className=\"form-control\"\n                                name=\"phoneNumber\"\n                                value={phoneNumber}\n                                onChange={this.onChange}\n                                placeholder=\"Phone number\"\n                            />\n                            <br />\n                            <label\n                                htmlFor=\"password\"\n                                className=\"grey-text\"\n                            >\n                                Your password\n                            </label>\n                            <input\n                                id=\"password\"\n                                className=\"form-control\"\n                                name=\"passwordOne\"\n                                value={passwordOne}\n                                onChange={this.onChange}\n                                type=\"password\"\n                                placeholder=\"Password\"\n                            />\n                            <label\n                                htmlFor=\"passwordTwo\"\n                                className=\"grey-text\"\n                            >\n                                Repeat password\n                            </label>\n                            <input\n                                id=\"passwordTwo\"\n                                className=\"form-control\"\n                                name=\"passwordTwo\"\n                                value={passwordTwo}\n                                onChange={this.onChange}\n                                type=\"password\"\n                                placeholder=\"confirm Password\"\n                            />\n                            <div className=\"text-center mt-4\">\n                                <MDBBtn color=\"unique\" type=\"submit\">\n                                    Register\n                                </MDBBtn>\n                            </div>\n                            {error && <p>{error.message}</p>}\n\n                        </form>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n\n        );\n    }\n}\n\nconst SignUpLink = () => (\n    <p>\n        Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n    </p>\n);\n\nconst SignUpForm = compose(\n    withRouter,\n    withFirebase,\n)(SignUpFormBase);\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport {MDBBtn, MDBCol, MDBContainer, MDBRow} from \"mdbreact\";\n\nconst PasswordForgetPage = () => (\n    <div>\n        <h1>PasswordForget</h1>\n        <PasswordForgetForm />\n    </div>\n);\n\nconst INITIAL_STATE = {\n    email: '',\n    error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onSubmit = event => {\n        const { email } = this.state;\n\n        this.props.firebase\n            .doPasswordReset(email)\n            .then(() => {\n                this.setState({ ...INITIAL_STATE });\n            })\n            .catch(error => {\n                this.setState({ error });\n            });\n\n        event.preventDefault();\n    };\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n        const { email, error } = this.state;\n\n        return (\n                <MDBContainer>\n                    <MDBRow>\n                        <MDBCol md=\"6\">\n                            <form onSubmit={this.onSubmit}>\n                                <p className=\"h4 text-center mb-4\">Update personal information</p>\n                                <label htmlFor=\"email2\" className=\"grey-text\">\n                                    New password\n                                </label>\n                                <input\n                                    id=\"email2\"\n                                    className=\"form-control\"\n\n                                    name=\"email\"\n                                    value={email}\n                                    onChange={this.onChange}\n                                    type=\"text\"\n                                    placeholder=\"Email Address\"\n                                />\n                                <br />\n\n                                <div className=\"text-center mt-4\">\n                                    <MDBBtn color=\"unique\" type=\"submit\">\n                                        Reset My Password\n                                    </MDBBtn>\n                                </div>\n                                {error && <p>{error.message}</p>}\n\n\n                            </form>\n                        </MDBCol>\n                    </MDBRow>\n                </MDBContainer>\n\n\n        );\n    }\n}\n\nconst PasswordForgetLink = () => (\n    <p>\n        <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n    </p>\n);\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\n\n\nconst SignInPage = () => (\n    <div>\n        <SignInForm />\n        <PasswordForgetLink />\n        <SignUpLink />\n    </div>\n);\n\nconst INITIAL_STATE = {\n    email: '',\n    password: '',\n    error: null,\n};\n\nclass SignInFormBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onSubmit = event => {\n        event.preventDefault();\n        const { email, password } = this.state;\n\n        this.props.firebase\n            .doSignInWithEmailAndPassword(email, password)\n            .then((data) => {\n                this.setState({ ...INITIAL_STATE });\n                this.props.history.push(ROUTES.HOME);\n\n                const user = data.user;\n\n            })\n            .catch(error => {\n                this.setState({ error });\n            });\n\n\n    };\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n        const { email, password, error } = this.state;\n\n        const isInvalid = password === '' || email === '';\n\n        return (\n            <MDBContainer>\n                <MDBRow>\n                    <MDBCol md=\"6\">\n                        <form onSubmit={this.onSubmit}>\n                            <h1 className=\"h4 text-center mb-4\">Sign in</h1>\n                            <label htmlFor=\"email3\" className=\"grey-text\">\n                                Your email\n                            </label>\n                            <input\n                                type=\"email\"\n                                id=\"email3\"\n                                className=\"form-control\"\n                                name=\"email\"\n                                value={email}\n                                onChange={this.onChange}\n                                placeholder=\"Email Address\"\n                            />\n                            <br />\n                            <label htmlFor=\"password2\" className=\"grey-text\">\n                                Your password\n                            </label>\n                            <input\n                                type=\"password\"\n                                id=\"password2\"\n                                className=\"form-control\"\n                                name=\"password\"\n                                value={password}\n                                onChange={this.onChange}\n                                placeholder=\"Password\"\n                            />\n                            <div className=\"text-center mt-4\">\n                                <MDBBtn disabled={isInvalid}  color=\"indigo\" type=\"submit\">Login</MDBBtn>\n                            </div>\n                            {error && <p>{error.message}</p>}\n                        </form>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n        );\n    }\n}\n\nconst SignInForm = compose(\n    withRouter,\n    withFirebase,\n)(SignInFormBase);\n\nexport default SignInPage;\n\nexport { SignInForm };","import React, { Component } from 'react';\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\n\nimport { AuthUserContext, withAuthorization } from '../Session';\n\nclass HomePage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: false,\n            user:[],\n            users: []\n        };\n    }\n\n    componentDidMount()\n    {\n        this.getUser();\n\n    }\n    componentWillReceiveProps(){\n        {console.log(this.state.user)}\n    }\n    // componentWillUpdate(){\n    //     if(this.state.user.length!==0){\n    //         this.getUser();\n    //     }\n    //\n    //\n    // }\n    getUser(){\n        let currentUser=this.props.firebase.auth.currentUser;\n\n        this.setState({loading: true, user:currentUser});\n        this.props.firebase.users().on('value', snapshot => {\n            const usersObject = snapshot.val();\n\n            const usersList = Object.keys(usersObject).map(key => ({\n                ...usersObject[key],\n                uid: key,\n            }));\n\n            this.setState({\n                users: usersList,\n                loading: false,\n            });\n        });\n    }\n\n    componentWillUnmount() {\n        this.props.firebase.users().off();\n    }\n\n    render() {\n        const { user, users, loading } = this.state;\n        return (\n            <AuthUserContext.Consumer>\n                {authUser => (\n\n                    <div>\n\n                        <h1>Hi <span className={'teal-text'}>{user.displayName}</span>, welcome to home page</h1>\n                        <div>\n                            <img src={user.photoURL} alt='' width={150}/>\n                        </div>\n                        <h1>All users</h1>\n                        {loading && <div>Loading ...</div>}\n\n                        <UserList users={users} />\n                    </div>\n                )}\n            </AuthUserContext.Consumer>\n        );\n    }\n}\n\nconst UserList = ({ users }) => (\n    <MDBTable>\n        <MDBTableHead color=\"primary-color\" textWhite>\n            <tr>\n                <th>Id</th>\n                <th>email</th>\n                <th>Name</th>\n            </tr>\n        </MDBTableHead>\n        <MDBTableBody>\n            {users.map(user => (\n                <tr key={user.uid}>\n                    <td>{user.uid}</td>\n                    <td>{user.email}</td>\n                    <td>{user.username}</td>\n                </tr>\n\n            ))}\n\n        </MDBTableBody>\n    </MDBTable>\n\n);\n\n\n\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(HomePage);","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\n\n\nconst INITIAL_STATE = {\n    password:'',\n    passwordOne: '',\n    passwordTwo: '',\n    error: null,\n};\n\nclass PasswordChangeForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onSubmit = event => {\n        event.preventDefault();\n        const { password, passwordOne } = this.state;\n\n        this.props.firebase\n            .doPasswordUpdate(password, passwordOne)\n            .then(() => {\n                this.setState({ ...INITIAL_STATE });\n            })\n            .catch(error => {\n                this.setState({ error });\n            });\n\n\n    };\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n        const {password, passwordOne, passwordTwo, error } = this.state;\n\n        return (\n            <MDBContainer>\n                <MDBRow>\n                    <MDBCol md=\"6\">\n                        <form onSubmit={this.onSubmit}>\n                            <p className=\"h4 text-center mb-4\">Change password</p>\n                            <label htmlFor=\"password0\" className=\"grey-text\">\n                                Current password\n                            </label>\n                            <input\n                                id=\"password0\"\n                                className=\"form-control\"\n                                name=\"password\"\n                                value={password}\n                                onChange={this.onChange}\n                                type=\"password\"\n                                placeholder=\"Password\"\n                            />\n                            <br />\n                            <label htmlFor=\"password1\" className=\"grey-text\">\n                               New password\n                            </label>\n                            <input\n                                id=\"password1\"\n                                className=\"form-control\"\n                                name=\"passwordOne\"\n                                value={passwordOne}\n                                onChange={this.onChange}\n                                type=\"password\"\n                                placeholder=\"New Password\"\n                            />\n                            <br />\n                            <label\n                                htmlFor=\"passwordTwo1\"\n                                className=\"grey-text\"\n                            >\n                                Confirm password\n                            </label>\n                            <input\n                                id=\"passwordTwo1\"\n                                className=\"form-control\"\n                                name=\"passwordTwo\"\n                                value={passwordTwo}\n                                onChange={this.onChange}\n                                type=\"password\"\n                                placeholder=\"Confirm password\"\n                            />\n                            <br />\n\n                            <div className=\"text-center mt-4\">\n                                <MDBBtn color=\"unique\" type=\"submit\">\n                                    Update\n                                </MDBBtn>\n                            </div>\n                            {error && <p>{error.message}</p>}\n\n\n                        </form>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n\n\n        );\n    }\n}\n\nexport default withFirebase(PasswordChangeForm);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBTabPane, MDBTabContent, MDBNav, MDBNavItem, MDBNavLink, MDBIcon  } from 'mdbreact';\n\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\n\nclass AccountPage extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeItem: \"1\"\n        };\n    }\n\n\n    toggle = tab => () => {\n        if (this.state.activeItem !== tab) {\n            this.setState({\n                activeItem: tab\n            });\n        }\n    }\n\n    render() {\n        return (\n            <AuthUserContext.Consumer>\n                {authUser => (\n            <MDBContainer>\n                <MDBNav tabs color=\"default-color\">\n                    <MDBNavItem>\n                        <MDBNavLink\n                            to=\"#\"\n                            className={this.state.activeItem === \"1\" ? \"active teal-text\" : \"cyan-text\"}\n                            onClick={this.toggle(\"1\")}\n                            role=\"tab\"\n                        >\n                            <MDBIcon icon=\"user\" /> Update Information\n                        </MDBNavLink>\n                    </MDBNavItem>\n                    <MDBNavItem>\n                        <MDBNavLink\n                            to=\"#\"\n                            className={this.state.activeItem === \"3\" ? \"active teal-text\" : \"cyan-text\"}\n                            onClick={this.toggle(\"3\")}\n                            role=\"tab\"\n                        >\n                            <MDBIcon icon=\"envelope\" /> change Password\n                        </MDBNavLink>\n                    </MDBNavItem>\n\n                </MDBNav>\n                <MDBTabContent\n                    className=\"card\"\n                    activeItem={this.state.activeItem}\n                >\n                    <MDBTabPane tabId=\"1\" role=\"tabpanel\">\n                        <UpdateForm />\n                    </MDBTabPane>\n                    <MDBTabPane tabId=\"3\" role=\"tabpanel\">\n                        <PasswordChangeForm/>\n                    </MDBTabPane>\n\n                </MDBTabContent>\n            </MDBContainer>\n                    )}\n            </AuthUserContext.Consumer>\n        );\n    }\n}\n// const AccountPage = () => (\n//     <AuthUserContext.Consumer>\n//         {authUser => (\n//             <div>\n//                 <UpdateForm />\n//             </div>\n//         )}\n//     </AuthUserContext.Consumer>\n//\n// );\n\n\n\nconst INITIAL_STATE = {\n    username: '',\n    email: '',\n    phoneNumber:'',\n    photoURL:'',\n    passwordOne: '',\n    passwordTwo: '',\n    error: null,\n};\n\nclass UpdateFormBase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { ...INITIAL_STATE };\n    }\n\n    componentWillMount(){\n         this.props.firebase.getUser().then(data => {\n            console.log(data, 'data')\n            this.setState({\n                username: data.username,\n                email: data.email,\n                phoneNumber:data.phone,\n            })\n        }).catch(function(error) {\n            // An error happened.\n        });\n        let currentUser=this.props.firebase.auth.currentUser;\n        this.setState({\n            username: currentUser.username,\n            email: currentUser.email,\n            photoURL:currentUser.photoURL,\n        })\n    }\n\n    componentWillReceiveProps(){\n\n    }\n\n    onSubmit = event => {\n        const { username,phoneNumber, photoURL, email, } = this.state;\n\n        event.preventDefault();\n                this.props.firebase.updateUser({\n                    username,\n                    email,\n                    phoneNumber,\n                    photoURL\n                })\n\n\n\n    };\n    AddProfileImage = event => {\n        this.props.firebase.addProfileImage(event.target.files).then(url => {\n            debugger;\n            this.setState({photoURL:url})\n            return url;\n        }).catch(function (error) {\n\n        })\n\n\n\n    };\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n\n        const {\n            username,\n            email,\n            phoneNumber,\n            photoURL,\n            error,\n        } = this.state;\n\n        console.log(photoURL);\n        return (\n\n            <MDBContainer>\n                <MDBRow>\n                    <MDBCol md=\"6\">\n                        <form onSubmit={this.onSubmit}>\n                            <h1 className=\"h4 text-center mb-4 mt-3\">Update personal information</h1>\n\n                            <label htmlFor=\"file\" className=\"grey-text\">\n                                Add profile image\n                            </label>\n                            <input\n                                type=\"file\"\n                                id=\"file\"\n                                className=\"\"\n                                name=\"file\"\n                                onChange={this.AddProfileImage}\n                                placeholder=\"Full Name\"\n                            />\n                            <br />\n                            <div>\n                                <img src={photoURL} alt='' width={150}/>\n                            </div>\n                            <br />\n                            <label htmlFor=\"name\" className=\"grey-text\">\n                                Your name\n                            </label>\n\n                            <input\n                                type=\"text\"\n                                id=\"name\"\n                                className=\"form-control\"\n                                name=\"username\"\n                                value={username || ''}\n                                onChange={this.onChange}\n                                placeholder=\"Full Name\"\n                            />\n                            <br />\n                            <label\n                                htmlFor=\"phone\"\n                                className=\"grey-text\"\n                            >\n                                Phone Number\n                            </label>\n                            <input\n                                type=\"text\"\n                                id=\"phone\"\n                                className=\"form-control\"\n                                name=\"phoneNumber\"\n                                value={phoneNumber || ''}\n                                onChange={this.onChange}\n                                placeholder=\"Phone Number\"\n                            />\n                            <br />\n                            <label\n                                htmlFor=\"email1\"\n                                className=\"grey-text\"\n                            >\n                                Email Address\n                            </label>\n                            <input\n                                type=\"email\"\n                                id=\"email1\"\n                                className=\"form-control\"\n                                name=\"email\"\n                                value={email || ''}\n                                onChange={this.onChange}\n                                placeholder=\"Email Address\"\n                            />\n                            <br />\n\n                            <div className=\"text-center mt-4\">\n                                <MDBBtn color=\"unique\" type=\"submit\">\n                                    Update\n                                </MDBBtn>\n                            </div>\n                            {error && <p>{error.message}</p>}\n\n                        </form>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n\n        );\n    }\n}\n\n\nconst UpdateForm = compose(\n    withRouter,\n    withFirebase,\n)(UpdateFormBase);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(AccountPage);\n\n\n\n","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {compose} from 'recompose';\nimport {withFirebase} from '../Firebase';\nimport Dropzone from 'react-dropzone'\n\nimport {AuthUserContext, withAuthorization} from '../Session';\nimport {MDBContainer} from \"mdbreact\";\n\n\nclass AddPhotoPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeItem: \"1\"\n        };\n    }\n\n\n    toggle = tab => () => {\n        if (this.state.activeItem !== tab) {\n            this.setState({\n                activeItem: tab\n            });\n        }\n    }\n\n    render() {\n        return (\n            <AuthUserContext.Consumer>\n                {authUser => (\n                    <AddPhoto/>\n                )}\n            </AuthUserContext.Consumer>\n        );\n    }\n}\n\nconst INITIAL_STATE = {\n    photo: '',\n    files:'',\n    error: null,\n};\n\nclass AddPhotoBase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {...INITIAL_STATE};\n    }\n\n    componentWillMount() {\n         this.props.firebase.getUser().then(data => {\n            console.log(data, 'data')\n            this.setState({\n                username: data.username,\n                email: data.email,\n                phoneNumber: data.phone,\n            })\n        }).catch(function (error) {\n            // An error happened.\n        });\n        ;\n\n\n    }\n\n    componentWillReceiveProps() {\n\n    }\n\n    onSubmit = event => {\n        const {username, phoneNumber, photoURL, email,} = this.state;\n\n        event.preventDefault();\n        this.props.firebase.updateUser({\n            username,\n            email,\n            phoneNumber,\n            photoURL\n        })\n    };\n\n    onChange = file => {\n        this.setState({file:file});\n        this.props.firebase.addPhoto(file)\n        //     .then(file =>{\n        //     console.log(file)\n        // });\n        // this.props.firebase.getImages().then(file =>{\n        //     console.log(file)\n        // });\n    };\n\n    render() {\n\n        const {\n            error,\n        } = this.state;\n\n\n        return (\n            <React.Fragment>\n            <Dropzone onDrop={acceptedFiles => this.onChange(acceptedFiles)}>\n                {({getRootProps, getInputProps}) => (\n                    <section>\n                        <div {...getRootProps()} className='dropzone'>\n                            <input {...getInputProps()} />\n                            <p className='pt-3'>Click to select files</p>\n                        </div>\n                    </section>\n                )}\n            </Dropzone>\n                {error && <p>{error.message}</p>}\n            <div>\n\n                {\n                    this.state.files.length>0 && this.state.files.map(file => {\n                        return <MDBContainer>\n                            <img src={file} alt=''/>\n                        </MDBContainer>\n                    })\n                }\n            </div>\n            </React.Fragment>\n        );\n    }\n}\n\n\nconst AddPhoto = compose(\n    withRouter,\n    withFirebase,\n)(AddPhotoBase);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(AddPhotoPage);\n\n\n\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Navigation from '../Navigation';\nimport LandingPage from '../Landing';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport PasswordForgetPage from '../PasswordForget';\nimport HomePage from '../Home';\nimport AccountPage from '../Account';\nimport AdminPage from '../AddPhoto';\n\nimport * as ROUTES from '../../constants/routes';\nimport { withAuthentication } from '../Session';\n\n\nconst App = () => (\n    <Router>\n        <div>\n            <Navigation/>\n\n            <hr />\n\n            <Route exact path={ROUTES.LANDING} component={LandingPage} />\n            <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n            <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n            <Route\n                path={ROUTES.PASSWORD_FORGET}\n                component={PasswordForgetPage}\n            />\n            <Route path={ROUTES.HOME} component={HomePage} />\n            <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n            <Route path={ROUTES.ADMIN} component={AdminPage} />\n        </div>\n    </Router>\n);\n\nexport default withAuthentication(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport './tabs.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n    <FirebaseContext.Provider value={new Firebase()}>\n        <App />\n    </FirebaseContext.Provider>,\n    document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}